INTRODUCTION:
------------
 Goal: Introduction to Lucene. Retrieval and scoring using BM25.	  

PRE-REQUISITS:
-------------
JRE 1.8.101 or higher

EXTERNAL LIBRARIES USED:
-----------------------
jsoup-1.10.2
lucene-analyzers-common-4.7.2
lucene-core-4.7.2
lucene-queryparser-4.7.2


ITEMS INCLUDED IN THE ZIP FOLDER
--------------------------------
jsoup-1.10.2 
lucene-analyzers-common-4.7.2
lucene-core-4.7.2
lucene-queryparser-4.7.2
external JAR which is used in our program.

Java source files for the program in the folder src

Executable JAR file WebCrawler which creates the 1000 file list
Executable JAR file hw3 for generating index
Executable JAR file hw4 
Executable JAR file lucene_index for lucene indexing
Executable JAR file lucene_search for lucene search


Text files generated by lucene listing the top 100 results
Q1_Lucene for query1
Q2_Lucene for query2
Q3_Lucene  for query3
Q4_Lucene  for query4

Text files generated by indexer and BM25 algortihm listing the top 100 results
1 for query1
2 for query2
3 for query3
4 for query4

Text file which contains the query : queries

Folder which contains the parsed RAW HTML documents : output_files

implementation_details.txt contains brief summary of implementation

comparison_document contains the comparison of results between lucene and Task2

INSTRUCTIONS TO RUN:
-------------------
This is a platform independent applivation and can be run on Windows, Linux or Mac OS.
PLEASE USE THE LATEST VERSION OF JAVA JRE 1.8.101 or higher.

Running the JAR file on Windows, Linux and Mac OS	

For TASK 1
- Use the following command on the terminal to run java -jar Lucene_index.jar
Enter the path where the indexed files should be stored
Enter the path where the RAW HTML documents have been stored.

- Use the following command on the terminal to run java -jar Lucene_search.jar
Enter the path where the indexed files have been stored.
Enter the path where the query document has been stored.

FOR TASK 2

- run WebCrawler.jar to get the file list. 
Enter input: 1 
https://en.wikipedia.org/wiki/Sustainable_energy

output is  FileList.txt

-run hw3.jar to get UnigramDocFreq.txt;
input: Enter the FileList.txt generated from WebCrawler

Output is  UnigramDocFreq.txt

-run hw4.jar. 
Input: FileList.txt 

UnigramDocFreq.txt 

Queries.txt which contains the queries

Output: 1.txt, 2.txt, 3.txt, 4.txt


RESULTS:
----------
4 text files 1,2,3,4 listing the top 100 documents for HW4 task2.
4 text files 1,2,3,4 listing the top 100 documents for Task 1 lucene
which will be generated in your eclipse workspace

CITATIONS:
----------------
https://jsoup.org/                            // used JSOUP library for fetching the html from the URLs
https://jsoup.org/cookbook/                   // used for information on retrieving data from html
https://jsoup.org/apidocs/                    // used for information on retrieving data from html
Search Engines Information Retrieval in Practice  by W.BruceCroft DonaldMetzler TrevorStrohman   // for web crawling concepts
An Introduction to Information Retrieval Christopher D. Manning Prabhakar Raghavan Hinrich Schütze // for web crawling concepts
http://www.mkyong.com/java/jsoup-basic-web-crawler-example/                    // Example for how to use jsoup in java
https://github.com/chiragagrawal93/Lucene-Tutorials
